{"version":3,"sources":["images/logo.svg","images/backIcon.png","screens/Header.js","screens/Footer.js","screens/ItemGame.js","screens/Jogos.js","screens/PagJogo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","Footer","style","width","marginLeft","ItemGame","props","to","id","imagem","titulo","float","designer","textAlign","type","value","Jogos","componentDidMount","loadGames","state","boardgames","navigator","onLine","firebase","collection","orderBy","onSnapshot","snapshot","docChanges","forEach","change","push","doc","data","map","boardgame","filter","setState","localStorage","setItem","JSON","stringify","parse","getItem","jogos","this","backgroundColor","marginTop","key","Nome","Designer","Imagem","preco","Preco","desconto","Desconto","Component","Noticia","params","match","get","then","exists","console","log","catch","error","comprar","Aviso","txt","aviso","setTimeout","Tema","backIcon","onClick","App","path","exact","component","PagJogo","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6b82ed35.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a81f59b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/backIcon.dc9fbcf0.png\";","import React from 'react';\nimport '../styles/Header.css';\nimport logo from '../images/logo.svg';\n\nfunction Header() {\n    return (\n        <div>\n            <div className=\"headerRow\">\n                <div className=\"col-sm-2\">\n                    <img src={logo} alt=\"logo\" />\n                </div>\n                <div className=\"col-sm-8\">\n                    <div className=\"Title\">\n                        Pipeline BoardGames\n                    </div>\n                </div>\n            </div>\n            <div>\n                <br />\n            </div>\n        </div>\n    )\n}\n\nexport default Header;\n","import React from 'react';\nimport '../styles/Footer.css'\n\nfunction Footer() {\n    return (\n        <nav className=\"col-sm-12 footer\">\n            <img src=\"http://pngimg.com/uploads/facebook_logos/facebook_logos_PNG19751.png\" alt=\"\" style={{ width: '100px' }} />\n            <img src=\"http://pluspng.com/img-png/youtube-transparent-png-image-512.png\" alt=\"\" style={{ width: '85px' }} />\n            <img src=\"https://icon-library.net/images/icon-twitter/icon-twitter-9.jpg\" alt=\"\" style={{ width: '70px', marginLeft: '10px' }} />\n            <h6>© 2019 Pipeline BoardGames</h6>\n        </nav>\n    )\n}\n\nexport default Footer;\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport '../styles/ItemGame.css'\n\nconst ItemGame = props => (\n    <div className=\"card col-12 col-md-3\" >\n        <Link to={`/jogo/${props.id}`}>\n            <img className=\"imagem\" src={props.imagem} alt='Tela' />\n        </Link>\n        <div className=\"card-body\">\n            <h4 className=\"card-title\">{props.titulo}</h4>\n            <p className=\"card-text\" style={{ float: 'bottom' }}>Designer: {props.designer}<br /></p>\n        </div>\n        <div style={{ textAlign: \"center\" }}>\n            <Link to={`/jogo/${props.id}`}>\n                <input type=\"button\" value=\"Comprar\" className=\"btn btn-danger mb-2\" />\n            </Link>\n        </div>\n    </div>\n)\n\nexport default ItemGame","import React, { Component } from 'react'\n\nimport * as firebase from 'firebase/app'\nimport 'firebase/firestore'\n\nimport ItemGame from './ItemGame'\n\nclass Jogos extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            boardgames: [],\n        }\n    }\n\n    componentDidMount = () => {\n        this.loadGames()\n    }\n\n    async loadGames() {\n        let boardgames = []\n\n        if (navigator.onLine) {\n            firebase.firestore().collection('boardgames').orderBy('Nome').onSnapshot(snapshot => {\n\n                snapshot.docChanges().forEach(change => {\n\n                    if (change.type === \"added\") {\n                        boardgames.push({ id: change.doc.id, ...change.doc.data() })\n                    }\n\n                    if (change.type === \"modified\") {\n                        boardgames = boardgames.map(boardgame => boardgame.id === change.doc.id ?\n                            { id: change.doc.id, ...change.doc.data() }\n                            : boardgame)\n                    }\n\n                    if (change.type === \"removed\") {\n                        boardgames = boardgames.filter(boardgame => boardgame.id !== change.doc.id)\n                    }\n                })\n                this.setState({ boardgames })\n                localStorage.setItem(\"Jogos\", JSON.stringify(boardgames))\n            })\n        } else {\n            const jogos = await JSON.parse(localStorage.getItem('Jogos'))\n            this.setState({ boardgames: jogos })\n        }\n\n    }\n\n    render() {\n        return (\n            <div className=\"container sm-12\" style={{ backgroundColor: 'white' }}>\n                <br />\n                <h2>Jogos em Promoção</h2>\n                <div className=\"container\" style={{ marginTop: '2vh' }}>\n                    <div className='row justify-content-center'>\n                        {this.state.boardgames.map((boardgame) => (\n                            <ItemGame key={boardgame.id}\n                                id={boardgame.id}\n                                titulo={boardgame.Nome}\n                                designer={boardgame.Designer}\n                                imagem={boardgame.Imagem}\n                                preco={boardgame.Preco}\n                                desconto={boardgame.Desconto} />\n                        ))}\n                    </div>\n                </div>\n            </div >\n        )\n    }\n}\n\nexport default Jogos\n","import React, { Component } from 'react'\nimport * as firebase from 'firebase/app'\nimport { Link } from 'react-router-dom'\n\n\nimport '../styles/PagJogo.css'\nimport backIcon from '../images/backIcon.png'\n\nclass Noticia extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: null,\n            Nome: null,\n            Designer: null,\n            Tema: null,\n            Preco: null,\n            Desconto: null,\n            Imagem: null,\n\n            aviso: '',\n        }\n    }\n\n    componentDidMount = () => {\n        const { match: { params } } = this.props\n\n        const db = firebase.firestore()\n\n        var docRef = db.collection(\"boardgames\").doc(params.id);\n\n        docRef.get().then(doc => {\n            if (doc.exists) {\n                this.setState({ id: doc.id, ...doc.data(), })\n            } else {\n                // doc.data() will be undefined in this case\n                console.log(\"Erro...\");\n            }\n        }).catch(function (error) {\n            console.log(\"Erro de conexão: \", error);\n        });\n    }\n\n    comprar = () => {\n        this.Aviso('Adicionado no carrinho!');\n    }\n\n    Aviso = (txt) => {\n        this.setState({ aviso: txt })\n        setTimeout(() => {\n            this.setState({ aviso: '' })\n        }, 5000)\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"col-sm-12\" style={{ float: 'left' }}>\n                    <Link to={'/'}>\n                        <img src={backIcon} alt=\"Voltar\" className=\"backIcon\" />\n                    </Link>\n                </div>\n                <div className=\"container pagBody\">\n                    <div className=\"col-sm-12\">\n                        <h1>{this.state.Nome}</h1>\n                    </div>\n                    <div className=\"col-sm-6\">\n                        <h6>Criado por: {this.state.Designer}</h6>\n                    </div>\n                    <div className=\"col-sm-12\">\n                        <img src={this.state.Imagem} className=\"pagImg\" alt=\"Jogo\" />\n                    </div>\n                    <br />\n                    <div>\n                        <input type=\"button\" className=\"btn btn-success mb-4\" value=\"Adicionar no Carrinho\" onClick={this.comprar} />\n                    </div>\n                </div>\n\n                {\n                    this.state.aviso !== '' ?\n                        <div className='alert alert-info text-center mt-3 mr-5 ml-5'>\n                            {this.state.aviso}\n                        </div>\n                        : ''\n                }\n            </div >\n        )\n    }\n}\n\nexport default Noticia\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport Header from './screens/Header'\nimport Footer from './screens/Footer'\nimport Jogos from './screens/Jogos'\nimport PagJogo from './screens/PagJogo'\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <Header />\n        <Route path=\"/\" exact component={Jogos} />\n        <Route path=\"/jogo/:id\" component={PagJogo} />\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (/*process.env.NODE_ENV === 'production' &&*/ 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/custom-service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport * as firebase from 'firebase/app'\nimport 'firebase/firestore'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCFQMETDLLiGS8MM7BNJLnikHZaETKkTI4\",\n    authDomain: \"flutter-test-37cbe.firebaseapp.com\",\n    databaseURL: \"https://flutter-test-37cbe.firebaseio.com\",\n    projectId: \"flutter-test-37cbe\",\n    storageBucket: \"flutter-test-37cbe.appspot.com\",\n    messagingSenderId: \"427510800098\",\n    appId: \"1:427510800098:web:46f86aefda0f88d47f08bb\",\n    measurementId: \"G-WMZQN2M541\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}